/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package library;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Bishal Timilsina
 */
public class LibraryUI extends javax.swing.JFrame {
    
    public static List<String> selected=new ArrayList<String>();
    public static boolean m1=false, a1=false, b1=false, M1=false, c1=false;
    public static String dummy="";
    private  List<Member> mems;
    private  List<Author> auths;
    private  List<Book> books;
    private  List<Magazine> magazines;
    private List<Copy> copies;
    private List<Loan> loans;
    private List<Reservation> reservations;
    
    /**
     * Creates new form LibraryUI
     */
    public LibraryUI() {
        initComponents();
        reservations=new ArrayList<Reservation>();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel32 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jTextField34 = new javax.swing.JTextField();
        jTextField35 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jTextField26 = new javax.swing.JTextField();
        jTextField27 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        jTextField31 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jTextField32 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextField33 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel42 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Populate table");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Member", "Author", "Book", "Magazine", "Copy", "Loan", "Reservation" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Name");

        jLabel3.setText("Phone");

        jLabel4.setText("Address");

        jLabel5.setText("Member No.");

        jTextField2.setText(" ");

        jLabel6.setText("First");

        jLabel7.setText("Last");

        jLabel8.setText("Street");

        jLabel9.setText("City");

        jLabel10.setText("State");

        jLabel11.setText("ZIP");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel3)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField4)
                                    .addComponent(jTextField5)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField7))
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(94, 94, 94)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                            .addComponent(jTextField8)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel9))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(168, 168, 168)
                                .addComponent(jLabel6)
                                .addGap(166, 166, 166)
                                .addComponent(jLabel7))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(283, 283, 283)
                                .addComponent(jButton1)))
                        .addGap(0, 95, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addGap(100, 100, 100)))
                .addGap(223, 223, 223))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addComponent(jButton1)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Member", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("ISBN:");

        jLabel13.setText("Title:");

        jButton2.setText("Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Author's Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel14.setText("Name");

        jLabel15.setText("First");

        jLabel16.setText("Last");

        jLabel17.setText("Phone");

        jLabel18.setText("Address");

        jLabel19.setText("Street");

        jLabel20.setText("City");

        jLabel21.setText("State");

        jLabel22.setText("ZIP");

        jLabel23.setForeground(new java.awt.Color(0, 153, 153));
        jLabel23.setText("Other Author(s)");

        jLabel24.setText("Names");

        jLabel25.setText("Contacts");

        jLabel26.setText("Separate Address of 2 authors by ;");

        jLabel27.setText("Addresses");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jLabel32.setText("Qualification");

        jLabel33.setText("University");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(285, 285, 285)
                                .addComponent(jLabel23))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(212, 212, 212)
                                .addComponent(jLabel19)
                                .addGap(53, 53, 53)
                                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(205, 205, 205))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel17)
                    .addComponent(jLabel14)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel27))
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addComponent(jLabel20)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)))
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextField19)
                            .addComponent(jTextField18))
                        .addGap(50, 50, 50))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField24))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextField25))
                        .addContainerGap())))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(jLabel26)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22))
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(21, 21, 21)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel31.setText("Number of Copies");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(72, 72, 72)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField9)
                            .addComponent(jTextField10, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Add Book", jPanel2);

        jLabel28.setText("Issue No.");

        jLabel29.setText("Title");

        jButton3.setText("Add");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel30.setText("Number of Copies");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jButton3)))
                .addContainerGap(253, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addComponent(jLabel30))
                    .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jButton3)
                .addContainerGap(294, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Magazine", jPanel7);

        jLabel43.setText("Publication Title");

        jLabel44.setText("Numbers to Add");

        jButton10.setText("Add");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(26, 26, 26)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jTextField34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(jTextField35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(jButton10)
                .addContainerGap(261, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Add Copies", jPanel8);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel34.setText("Name");

        jLabel35.setText("Publication Title");

        jLabel36.setText("Copy No");

        jButton5.setText("Borrow");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel36, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel34, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5)
                    .addComponent(jTextField26)
                    .addComponent(jTextField27, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(230, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addComponent(jButton5)
                .addContainerGap(268, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Borrow", jPanel3);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel37.setText("Name");

        jLabel38.setText("Publication Title");

        jLabel39.setText("Copy No.");

        jButton6.setText("Return");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel39, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel38, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel37, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField29, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                    .addComponent(jTextField30)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField31, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(282, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jTextField30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jTextField31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jButton6)
                .addContainerGap(256, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Return", jPanel4);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel40.setText("Name");

        jLabel41.setText("Publication Title");

        jButton7.setText("Reserve");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Cancel");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel42.setForeground(new java.awt.Color(51, 0, 255));
        jLabel42.setText("Reserve/Pick/Cancel publication");

        jButton9.setText("Pick Up");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel41)
                    .addComponent(jLabel40))
                .addGap(62, 62, 62)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField32)
                    .addComponent(jTextField33)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(276, Short.MAX_VALUE)
                .addComponent(jLabel42)
                .addGap(265, 265, 265))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel42)
                .addGap(44, 44, 44)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40))
                .addGap(29, 29, 29)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jTextField33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Reserve", jPanel5);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Phone", "Address", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton4.setText("Clear");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTabbedPane2)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jButton4)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
         String csvFile;
         String line= "";
         String cvsSplitBy = ";";
        if(jComboBox1.getSelectedItem().toString()=="Member" /* && !already("Member",selected) */){
                        selected=new ArrayList<String>();   selected.add("Member");        m1=true;
                 mems=new ArrayList<Member>();
                 csvFile= "src/data/members.txt";
                                 
                try (BufferedReader br = new BufferedReader(new FileReader(csvFile))){
                    while ((line = br.readLine()) != null) {
                        // use semi-colon as separator
                        String[] member = line.split(cvsSplitBy);
                        Member m=new Member(member[0], member[1], Long.parseLong(member[2]),Integer.parseInt(member[7]));
                        m.setAddress(new Address(member[3], member[4], member[5], Integer.parseInt(member[6])));
                        mems.add(m);
                    }
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }

                        /*int viewColumn = jTable1.convertColumnIndexToView(0);
                        TableColumn column = jTable1.getColumnModel().getColumn(viewColumn);
                        column.setPreferredWidth(2);*/
                   
                String titles[]=new String[]{"ID","First Name","Last Name","Phone","Address",""};
                   
                   DefaultTableModel model = setTable(titles);
                   int memNo; String fName; String lName; long phone; Object[] row; String add;

                   for(int i=0;i<mems.size();i++){     
                        memNo= mems.get(i).getMemberNo();
                        fName= mems.get(i).getFirstName();
                        lName= mems.get(i).getLastName();
                        phone= mems.get(i).getPhone();
                        add=mems.get(i).getAddress().getStreet()+","+mems.get(i).getAddress().getCity()+","+mems.get(i).getAddress().getState()+","+mems.get(i).getAddress().getZip();
                        row= new Object[]{ memNo, fName, lName, phone, add};        
                        model.addRow(row);
                   }                   
            }
            else if(jComboBox1.getSelectedItem().toString()=="Author" /* && !already("Author",selected) */){
                        selected=new ArrayList<String>();   selected.add("Author"); a1=true;
                        csvFile = "src/data/authors.txt";
                        auths=new ArrayList<Author>();
                        try (BufferedReader br = new BufferedReader(new FileReader(csvFile))){
                            while ((line = br.readLine()) != null) {
                                // use semi-colon as separator
                                String[] author = line.split(cvsSplitBy);
                                Author m=new Author(author[0], author[1], Long.parseLong(author[2]),author[7],author[8]);
                                m.setAddress(new Address(author[3], author[4], author[5], Integer.parseInt(author[6])));
                                auths.add(m);
                            }
                        } catch (FileNotFoundException e) {
                            e.printStackTrace();
                        } catch (IOException e) {
                            e.printStackTrace();
                        }                                  
                        
                   String titles[]=new String[]{"First Name","Last Name","Phone","Address","Credential","Short Bio."};
                   
                   DefaultTableModel model = setTable(titles);                        
                   
                   String fName; String lName; long phone; Object[] row; String add; String cred;String bio;

                  for(int i=0;i<auths.size();i++){                         
                    fName= auths.get(i).getFirstName();
                    lName= auths.get(i).getLastName();
                    phone=auths.get(i).getPhone();
                    add=auths.get(i).getAddress().getStreet()+","+auths.get(i).getAddress().getCity()+","+auths.get(i).getAddress().getState()+","+auths.get(i).getAddress().getZip();
                    cred=auths.get(i).getCredentials();
                    bio=auths.get(i).getShortBio();
                    row= new Object[]{fName, lName, phone, add,cred,bio};        
                    model.addRow(row);
                   }                   
            }else if(jComboBox1.getSelectedItem().toString()=="Book" /* && !already("Book",selected) */ && a1){
                        selected=new ArrayList<String>();   selected.add("Book"); b1=true;
                    csvFile = "src/data/books.txt";
                    books=new ArrayList<Book>();
                    try (BufferedReader br = new BufferedReader(new FileReader(csvFile))){
                        while ((line = br.readLine()) != null) {
                            // use semi-colon as separator
                            String[] book = line.split(cvsSplitBy);
                            Book b=new Book(book[0],Long.parseLong(book[1]));
                            String[] bookAuth=book[2].split(",");                            
                            List<Author> writers=new ArrayList<Author>();                            
                            for(int count=0;count<bookAuth.length;count++){
                                for(Author a:auths){                                                                        
                                    if(bookAuth[count].split(" ")[0].trim().equals(a.getFirstName().trim()) && 
                                            bookAuth[count].split(" ")[1].trim().equals(a.getLastName().trim())){                                        
                                        writers.add(a);                                        
                                        break;
                                    }
                                }
                            }
                            b.setAuthors(writers);
                            books.add(b);
                        }
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }              
                   String titles[]=new String[]{"Title","ISBN","Writers","","",""};
                   
                   DefaultTableModel model = setTable(titles);                        
                   
                   String title; long isbn; Object[] row; String authors="";

                  for(int i=0;i<books.size();i++){                         
                    title= books.get(i).getTitle();
                    isbn= books.get(i).getISBN();
                    int p;      Author a; 
                    for(p=0;p<books.get(i).getAuthors().size()-1;p++){
                        a=books.get(i).getAuthors().get(p);
                        authors+=(a.getFirstName()+" "+a.getLastName()+" , ");
                    }
                    a=books.get(i).getAuthors().get(p);
                    authors+=(a.getFirstName()+" "+a.getLastName());
                    row= new Object[]{title, isbn, authors};        
                    model.addRow(row);
                    authors="";
                }                   
            }  else if(jComboBox1.getSelectedItem().toString()=="Magazine" /* && !already("Magazine",selected) */){
                        selected=new ArrayList<String>();   selected.add("Magazine"); M1=true;
                    csvFile = "src/data/magazines.txt";
                    magazines=new ArrayList<Magazine>();
                    try (BufferedReader br = new BufferedReader(new FileReader(csvFile))){
                        while ((line = br.readLine()) != null) {
                            // use semi-colon as separator
                            String[] magazine = line.split(cvsSplitBy);
                            Magazine b=new Magazine(magazine[0],Integer.parseInt(magazine[1]));                            
                            magazines.add(b);
                        }
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }              
                   String titles[]=new String[]{"Title","Issue No.","","","",""};
                   
                   DefaultTableModel model = setTable(titles);                        
                   
                   String title; int issue; Object[] row;

                  for(int i=0;i<magazines.size();i++){                         
                    title= magazines.get(i).getTitle();
                    issue= magazines.get(i).getIssueNo();                   
                    row= new Object[]{title, issue};        
                    model.addRow(row);                    
                }                   
            }  else if(jComboBox1.getSelectedItem().toString()=="Copy" /* && !already("Copy",selected) */ && M1 && b1){
                        selected=new ArrayList<String>();   selected.add("Copy"); c1=true;
                    csvFile = "src/data/copies.txt";
                    copies=new ArrayList<Copy>();
                    try (BufferedReader br = new BufferedReader(new FileReader(csvFile))){
                        while ((line = br.readLine()) != null) {
                            // use semi-colon as separator
                            String[] copy = line.split(cvsSplitBy);
                            Publication p=new Magazine(dummy, 000);                             
                            List<Publication> pubs;                            
                            pubs=new ArrayList<Publication>(books);
                            pubs.addAll(magazines);
                            for(Publication x:pubs)
                                if(x.getTitle().trim().equals(copy[1].trim())) {  
                                    p=x;                                    
                                    break;
                                }
                            Copy b=new Copy(Integer.parseInt(copy[0]),p,copy[2].trim());
                            p.addCopy(b);                            
                            copies.add(b);
                        }
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }              
                   String titles[]=new String[]{"Copy No.","Publication","Status","","",""};
                   
                   DefaultTableModel model = setTable(titles);                        
                   
                   int copyNo; String pub; String status; Object[] row;

                  for(int i=0;i<copies.size();i++){                         
                    copyNo= copies.get(i).getCopyNo();
                    pub= copies.get(i).getPublication().getTitle();
                    status=copies.get(i).getStatus();
                    row= new Object[]{copyNo,pub,status};        
                    model.addRow(row);                    
                }                                                  
            } else if(jComboBox1.getSelectedItem().toString()=="Loan" /* && !already("Loan",selected) */ && m1 && c1){
                        selected=new ArrayList<String>();   selected.add("Loan");
                    csvFile = "src/data/loans.txt";
                    loans=new ArrayList<Loan>();
                    try (BufferedReader br = new BufferedReader(new FileReader(csvFile))){
                        while ((line = br.readLine()) != null) {
                            // use semi-colon as separator
                            String[] loan = line.split(cvsSplitBy);
                            Member m=getMemberWithId(Integer.parseInt(loan[0]));
                            Copy c=getCopy(Integer.parseInt(loan[1].split(",")[0]),loan[1].split(",")[1].trim());
                            Loan b=new Loan(m,c,
                                           new GregorianCalendar(Integer.parseInt(loan[2].split("/")[0]),Integer.parseInt(loan[2].split("/")[1])-1,Integer.parseInt(loan[2].split("/")[2])),
                                                new GregorianCalendar(Integer.parseInt(loan[3].split("/")[0]),Integer.parseInt(loan[3].split("/")[1])-1,Integer.parseInt(loan[3].split("/")[2])));                                                      
                            m.addLoan(b);                            
                            c.addLoan(b);                            
                            loans.add(b);
                        }
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }              
                   String titles[]=new String[]{"Member","Copy","Borrow Date","Return Date","",""};
                   
                   DefaultTableModel model = setTable(titles);                        
                   
                   String member; String copy; 
                   String get;   String ret;
                   Object[] row;

                  for(int i=0;i<loans.size();i++){                         
                    member= loans.get(i).getBorrower().getFirstName()+" "+loans.get(i).getBorrower().getLastName();
                    copy= loans.get(i).getRelCopy().getCopyNo()+","+loans.get(i).getRelCopy().getPublication().getTitle();
                    get= new SimpleDateFormat("yyyy/MM/dd").format(loans.get(i).getCheckoutDate().getTime());
                    ret= new SimpleDateFormat("yyyy/MM/dd").format(loans.get(i).getReturnDate().getTime());
                    row= new Object[]{member,copy,get,ret};        
                    model.addRow(row);                    
                }                   
            } else if(jComboBox1.getSelectedItem().toString()=="Reservation" /* &&!already("Reservation",selected) */ && m1 && b1 && M1){
                selected=new ArrayList<String>();   selected.add("Reservation");
                                                                         
                   String titles[]=new String[]{"Member","Publication","Status Date","Status","",""};
                   
                   DefaultTableModel model = setTable(titles);                        
                   
                   String member; String publication; 
                   String date;   String status;
                   Object[] row;

                  for(int i=0;i<reservations.size();i++){                         
                    member= reservations.get(i).getMember().getFirstName()+" "+reservations.get(i).getMember().getLastName();
                    publication= reservations.get(i).getPublication().getTitle();
                    date= new SimpleDateFormat("yyyy/MM/dd").format(reservations.get(i).getStatusDate().getTime());
                    status=reservations.get(i).getStatus();
                    row= new Object[]{member,publication,date,status};        
                    model.addRow(row);                    
                }
            }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int id=Integer.parseInt(jTextField1.getText());
        String fName=jTextField2.getText();
        String lName=jTextField3.getText();
        long phone=Long.parseLong(jTextField4.getText());
        String street=jTextField5.getText();
        String city=jTextField6.getText();
        String state=jTextField7.getText();
        int zip=Integer.parseInt(jTextField8.getText());
        
        Member newMem=new Member(fName, lName, phone, id);
        newMem.setAddress(new Address(street, city, state, zip));
        mems.add(newMem);    
        
        // add to file
        try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/members.txt", true)))) {
        out.println(fName+";"+lName+";"+phone+";"+street+";"+city+";"+state+";"+zip+";"+id);
        }catch (IOException e) {
             System.out.println("Data not written to file!");
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int isbn=Integer.parseInt(jTextField9.getText());
        String title=jTextField10.getText();
        int num=Integer.parseInt(jTextField23.getText());
                         
        ArrayList<String> fName=new ArrayList<String>();
        fName.add(jTextField11.getText()); 
        ArrayList<String> lName=new ArrayList<String>();
        lName.add(jTextField12.getText());
        ArrayList<Long> phone=new ArrayList<Long>();
        phone.add(Long.parseLong(jTextField13.getText()));
        ArrayList<String> street=new ArrayList<String>();
        street.add(jTextField14.getText());
        ArrayList<String> city=new ArrayList<String>();
        city.add(jTextField15.getText());
        ArrayList<String> state=new ArrayList<String>();
        state.add(jTextField16.getText());
        ArrayList<Integer> zip=new ArrayList<Integer>();
        zip.add(Integer.parseInt(jTextField17.getText()));
                
        if(jTextField18.getText().length()>0){            
            String names[]=jTextField18.getText().split(",");
            String phones[]=jTextField19.getText().split(",");
            String adds[]=jTextArea2.getText().split(";");
            for(int it=0;it<names.length;it++){
                fName.add(names[it].split(" ")[0]);
                lName.add(names[it].split(" ")[1]);
                phone.add(Long.parseLong(phones[it]));
                String adLine[]=adds[it].split(",");
                street.add(adLine[0]);
                city.add(adLine[1]);
                state.add(adLine[2]);
                zip.add(Integer.parseInt(adLine[3]));
            }
        }
        
        String authorsThis="";
        List<Author> thisBookAuth=new ArrayList<Author>();
        for(int p=0;p<fName.size();p++){
            Author a=new Author(fName.get(p), lName.get(p), phone.get(p),jTextField24.getText(),jTextField25.getText()+" scholar");
            String sep=(p==fName.size()-1)?"":",";
            authorsThis+=(fName.get(p)+" "+lName.get(p)+sep);
            a.setAddress(new Address(street.get(p), city.get(p), state.get(p), zip.get(p)));            
            thisBookAuth.add(a);
            // add to file
            try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/authors.txt", true)))) {
                out.println(fName.get(p)+";"+ lName.get(p)+";"+ phone.get(p)+";"+street.get(p)+";"+ city.get(p)+";"+ state.get(p)+";"+ zip.get(p)+";"+jTextField24.getText()+";"+jTextField25.getText()+" scholar");
            }catch (IOException e) {
                 System.out.println("Data not written to file!");
            }
        }
        
        auths.addAll(thisBookAuth);
        
        Book newBok=new Book(title, isbn);        
        newBok.setAuthors(thisBookAuth);        
        books.add(newBok);        
        
        // add to file
        try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/books.txt", true)))) {
            out.println(title+";"+isbn+";"+authorsThis);
        }catch (IOException e) {
             System.out.println("Data not written to file!");
        }
        
        for(int k=0;k<num;k++){
            try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/copies.txt", true)))) {
                copies.add(new Copy(k, (Publication)newBok));
                out.println(k+";"+title+";available");
            }catch (IOException e) {
             System.out.println("Data not written to file!");
            }
        }
        dummy=title;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int isN=Integer.parseInt(jTextField20.getText());
        String title=jTextField21.getText();
        int num=Integer.parseInt(jTextField22.getText());
        
        Magazine newMag=new Magazine(title, isN);        
        magazines.add(newMag);
        
        // add to file
        try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/magazines.txt", true)))) {
        out.println(title+";"+isN);
        }catch (IOException e) {
             System.out.println("Data not written to file!");
        }
        
        for(int k=0;k<num;k++){
            try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/copies.txt", true)))) {
                copies.add(new Copy(k, (Publication)newMag));
                out.println(k+";"+title+";available");
            }catch (IOException e) {
             System.out.println("Data not written to file!");
            }
        }
        dummy=title;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jTextArea1.setText("");
        jTextArea2.setText("");
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jTextField8.setText("");
        jTextField9.setText("");
        jTextField10.setText("");
        jTextField11.setText("");
        jTextField12.setText("");
        jTextField13.setText("");
        jTextField14.setText("");
        jTextField15.setText("");
        jTextField16.setText("");
        jTextField17.setText("");
        jTextField18.setText("");
        jTextField19.setText("");
        jTextField20.setText("");
        jTextField21.setText("");
        jTextField22.setText("");
        jTextField23.setText("");
        jTextField24.setText("");
        jTextField25.setText("");
        jTextField26.setText("");
        jTextField27.setText("");
        jTextField28.setText("");
        jTextField29.setText("");
        jTextField30.setText("");
        jTextField31.setText("");
        jTextField32.setText("");
        jTextField33.setText("");
        jTextField34.setText("");
        jTextField35.setText("");
        jLabel42.setText("Reserve/Pick/Cancel publication");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String name[]=jTextField26.getText().split(" ");
        Member m=getMemberByName(name[0],name[1]);
        Copy sc=getCopy(Integer.parseInt(jTextField28.getText()),jTextField27.getText());
        
         if(sc!=null && m!=null){
             
                Loan lMade=m.loan(sc);
                if(lMade!=null){
                    loans.add(lMade);
                    m.addLoan(lMade);                    
                    sc.addLoan(lMade);                    
                    try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/loans.txt", true)))) {                
                        out.println(lMade.getBorrower().getMemberNo()+";"+Integer.parseInt(jTextField28.getText())+","+jTextField27.getText()+";"
                                    + new SimpleDateFormat("yyyy/MM/dd").format(lMade.getCheckoutDate().getTime()) +";"
                                        + new SimpleDateFormat("yyyy/MM/dd").format(lMade.getReturnDate().getTime()));
                    }catch (IOException e) {
                     System.out.println("Data not written to file!");
                    }
                    
                    
                    // Don't edit code below as it edits db file
                    String line="";
                    Copy findMe=getCopy(Integer.parseInt(jTextField28.getText()),jTextField27.getText());
                    
                    UpdateCopies(line,findMe);
                    
                }  
            
         }       
         
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String name[]=jTextField29.getText().split(" ");
        Member m=getMemberByName(name[0],name[1]);
        Copy sc=getCopy(Integer.parseInt(jTextField31.getText()),jTextField30.getText());
        
         if(sc!=null && m!=null){
             
                Loan lMade=m.returnIt(sc);
//                System.out.println("Fil4"+lMade.getBorrower().getFirstName()+":"+lMade.getReturnDate());
                if(lMade!=null){  
                 
                    // Don't edit code below as it edits db file
                    String line="";
                    Copy findMe=sc;
                    try (BufferedReader br = new BufferedReader(new FileReader("src/data/copies.txt"));
                            PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/tcopies.txt")))){
                        while ((line = br.readLine()) != null) {
                            // use semi-colon as separator
                            String[] copy = line.split(";");
                            Publication p=new Magazine(dummy, 000);                             
                            List<Publication> pubs;                            
                            pubs=new ArrayList<Publication>(books);
                            pubs.addAll(magazines);
                            for(Publication x:pubs)
                                if(x.getTitle().trim().equals(copy[1].trim())) {  
                                    p=x;                                    
                                    break;
                                }
                            Copy b=new Copy(Integer.parseInt(copy[0]),p,copy[2]);                                                   
                            if(findMe.getCopyNo()==b.getCopyNo() && findMe.getPublication().getTitle().trim().equals(b.getPublication().getTitle().trim()))
                                out.println(findMe.getCopyNo()+";"+findMe.getPublication().getTitle()+";"+findMe.getStatus());
                            else
                                out.println(b.getCopyNo()+";"+b.getPublication().getTitle()+";"+b.getStatus());
                        }
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    
                    new File("src/data/copies.txt").delete();
                    new File("src/data/tcopies.txt").renameTo(new File("src/data/copies.txt"));
                    
                   
                   
                    
                    // Don't edit code below as it edits db file
                    line="";
                    Loan findX=lMade;
//                    System.out.println("Fil4"+findX.getBorrower().getFirstName()+":"+findX.getReturnDate());
                    try (BufferedReader br = new BufferedReader(new FileReader("src/data/loans.txt"));
                            PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/tloans.txt")))){
                        while ((line = br.readLine()) != null) {
                            // use semi-colon as separator
                            String[] loan = line.split(";");                            
                            Loan b=new Loan(getMemberWithId(Integer.parseInt(loan[0])),getCopy(Integer.parseInt(loan[1].split(",")[0]), loan[1].split(",")[1]),
                                    new GregorianCalendar(Integer.parseInt(loan[2].split("/")[0]), Integer.parseInt(loan[2].split("/")[1])-1, Integer.parseInt(loan[2].split("/")[2])),
                                        new GregorianCalendar(Integer.parseInt(loan[3].split("/")[0]), Integer.parseInt(loan[3].split("/")[1])-1, Integer.parseInt(loan[3].split("/")[2]))
                                    ); 
                            
//                            System.out.println("********X=b?***********");
//                            System.out.println("Borrower:"+findX.getBorrower().getFirstName()+"=="+b.getBorrower().getFirstName()+"?***"+findX.getBorrower().equals(b.getBorrower())+"***");
//                            System.out.println("Copy:"+findX.getRelCopy().getCopyNo()+"=="+b.getRelCopy().getCopyNo()+"?***"+findX.getRelCopy().equals(b.getRelCopy())+"***");
//                            System.out.println("Borrow Date:"+findX.getCheckoutDate().get(Calendar.DAY_OF_MONTH)+"=="+b.getCheckoutDate().get(Calendar.DAY_OF_MONTH)+"?***"+findX.getCheckoutDate().equals(b.getCheckoutDate())+"***");
//                            System.out.println("Return Date:"+findX.getReturnDate().get(Calendar.DAY_OF_MONTH)+"=="+b.getReturnDate().get(Calendar.DAY_OF_MONTH)+"?***"+findX.getReturnDate().equals(b.getReturnDate())+"***");
                            if(findX.getBorrower().equals(b.getBorrower()) &&
                                    findX.getRelCopy().equals(b.getRelCopy()) &&
                                        findX.getCheckoutDate().equals(b.getCheckoutDate()))
                                out.println(findX.getBorrower().getMemberNo()+";"+findX.getRelCopy().getCopyNo()+","+findX.getRelCopy().getPublication().getTitle()+
                                        ";"+new SimpleDateFormat("yyyy/MM/dd").format(findX.getCheckoutDate().getTime())+
                                        ";"+new SimpleDateFormat("yyyy/MM/dd").format(findX.getReturnDate().getTime())
                                );
                            else
                                out.println(b.getBorrower().getMemberNo()+";"+b.getRelCopy().getCopyNo()+","+b.getRelCopy().getPublication().getTitle()+
                                        ";"+new SimpleDateFormat("yyyy/MM/dd").format(b.getCheckoutDate().getTime())+
                                        ";"+new SimpleDateFormat("yyyy/MM/dd").format(b.getReturnDate().getTime())
                                );
                        }
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    
                    new File("src/data/loans.txt").delete();
                    new File("src/data/tloans.txt").renameTo(new File("src/data/loans.txt"));                    
                    
                    /*                
                        out.println(lMade.getBorrower().getMemberNo()+";"+Integer.parseInt(jTextField28.getText())+","+jTextField27.getText()+";"
                                    + new SimpleDateFormat("yyyy/MM/dd").format(lMade.getCheckoutDate().getTime()) +";"
                                        + new SimpleDateFormat("yyyy/MM/dd").format(lMade.getReturnDate().getTime()));
                    */
                         
                    
                    
                }  
            
         }  
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Reserve
        for(Copy c:getPublication(jTextField33.getText().trim()).getCopies()){
            if(c.getStatus().trim().equals("available")){
                jLabel42.setText("Copy No. "+c.getCopyNo()+" is available! Borrow it.");
                
                
                // auto borrow trial failed
                /*
                Loan atmdL=getMemberByName(jTextField32.getText().trim().split(" ")[0],jTextField32.getText().trim().split(" ")[1]).loan(c);
                atmdL.getBorrower().addLoan(atmdL);
                c=atmdL.getRelCopy();
                if(c==null) System.out.println("I AM NULL & HOW CAN U SEE?");
                c.addLoan(atmdL);                
                loans.add(atmdL);
                
                try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/loans.txt", true)))) {                
                        out.println(atmdL.getBorrower().getMemberNo()+";"+c.getCopyNo()+","+c.getPublication().getTitle()+";"
                                    + new SimpleDateFormat("yyyy/MM/dd").format(atmdL.getCheckoutDate().getTime()) +";"
                                        + new SimpleDateFormat("yyyy/MM/dd").format(atmdL.getReturnDate().getTime()));
                    }catch (IOException e) {
                     System.out.println("Data not written to file!");
                    }
                    
                    
                    // Don't edit code below as it edits db file
                    UpdateCopies("", c);
                */
                return;
            }
        }
           
        Reservation res2do=new Reservation(getMemberByName(jTextField32.getText().trim().split(" ")[0],jTextField32.getText().trim().split(" ")[1])
                ,getPublication(jTextField33.getText().trim()));
        res2do.setStatus("pending");
        res2do.setStatusDate(new GregorianCalendar());        
        reservations.add(res2do);
        jLabel42.setText("Reservation submitted. Status: "+res2do.getStatus());
        
    }//GEN-LAST:event_jButton7ActionPerformed

    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // Cancel
        
        boolean resThrown=false;
                
        for(Reservation r:reservations){
            if(r.getMember().getFirstName().trim().equals(jTextField32.getText().trim().split(" ")[0].trim()) &&
                    r.getMember().getLastName().trim().equals(jTextField32.getText().trim().split(" ")[1].trim()) &&
                        r.getPublication().getTitle().trim().equals(jTextField33.getText().trim())&&
                            (r.getStatus().trim().equals("hold") || r.getStatus().trim().equals("pending"))){                
                r.getMember().cancelReservation(r);
                if(r.getCopy()!=null)
                    UpdateCopies("", r.getCopy());
                // Want to maintain history then don't assign as below. Just assign 'true'.
                resThrown=true;   // throwing away cancelled reservation
            }
        }
        
        if(resThrown){
            jLabel42.setText("Reservation cancelled!");
        }
        else{
            jLabel42.setText("Reservation was not made!");
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // Pick Up
        
        boolean resPicked=false;
                
        for(Reservation r:reservations){
            if(r.getMember().getFirstName().trim().equals(jTextField32.getText().trim().split(" ")[0].trim()) &&
                    r.getMember().getLastName().trim().equals(jTextField32.getText().trim().split(" ")[1].trim()) &&                    
                        r.getPublication().getTitle().trim().equals(jTextField33.getText().trim()) &&
                            r.getStatus().trim().equals("hold")){                
                
                Member m=r.getMember();
                Copy sc=r.getCopy();
                Loan lMade=m.pickupReservation(r);
                
                 if(lMade!=null){
                    loans.add(lMade);
                    m.addLoan(lMade);                    
                    sc.addLoan(lMade);                    
                    try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/loans.txt", true)))) {                
                        out.println(lMade.getBorrower().getMemberNo()+";"+sc.getCopyNo()+","+r.getPublication().getTitle()+";"
                                    + new SimpleDateFormat("yyyy/MM/dd").format(lMade.getCheckoutDate().getTime()) +";"
                                        + new SimpleDateFormat("yyyy/MM/dd").format(lMade.getReturnDate().getTime()));
                    }catch (IOException e) {
                     System.out.println("Data not written to file!");
                    }
                    
                    
                    // Don't edit code below as it edits db file
                    UpdateCopies("", r.getCopy());
                    
                }  
                                                
                resPicked=true;               
            }
        }
        
        if(resPicked){
            jLabel42.setText("Reservation picked!");
        }
        else{
            jLabel42.setText("Reservation could not be picked!");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        
        Publication p=getPublication(jTextField34.getText().trim());
        int offset=p.getCopies().size();
        
        for(int k=0;k<(Integer.parseInt(jTextField35.getText().trim()));k++){
            try(PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/copies.txt", true)))) {                
                Copy additional=new Copy(offset+k,p);
                p.addCopy(additional);                
                copies.add(additional);
                out.println((k+offset)+";"+jTextField34.getText().trim()+";available");
            }catch (IOException e) {
             System.out.println("Data not written to file!");
            }
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private DefaultTableModel setTable(String[] titles) {
        for(int y=0;y<titles.length;y++){
            int viewColumn = jTable1.convertColumnIndexToView(y);
            TableColumn column = jTable1.getColumnModel().getColumn(viewColumn);
            column.setHeaderValue(titles[y]);
        }
        jTable1.getTableHeader().repaint();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int total=model.getRowCount();
        for(int n=0;n<total;n++)
            model.removeRow(0);
        return model;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
                        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LibraryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LibraryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LibraryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LibraryUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
                                              
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LibraryUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField31;
    private javax.swing.JTextField jTextField32;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables

    private boolean already(String toString, List<String> selected) {
        for(int i=0;i<selected.size();i++)
            if(selected.get(i)==toString)   return true;
        return false;
    }

    private Member getMemberWithId(int y) {
        for(Member x:mems)
            if(x.getMemberNo()==y) {  
               return x;
            }
        return null;
    }

    private Copy getCopy(int parseInt, String trim) {
        for(Copy x:copies)
            if(x.getCopyNo()==parseInt && x.getPublication().getTitle().trim().equals(trim)){  
               return x;
            }
        return null;
    }

    private Publication getPublication(String string) {
        List<Publication> pubs=new ArrayList<Publication>(books);
        pubs.addAll(magazines);
        for(Publication x:pubs)
            if(x.getTitle().trim().equals(string)){  
               return x;
            }
        return null;
    }

    private Member getMemberByName(String string, String string0) {
        for(Member x:mems)
            if(x.getFirstName().trim().equals(string.trim()) && x.getLastName().trim().equals(string0.trim()) ) {  
               return x;
            }
        return null;
    }

    private void UpdateCopies(String line, Copy findMe) {
        try (BufferedReader br = new BufferedReader(new FileReader("src/data/copies.txt"));
                            PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter("src/data/tcopies.txt")))){
                        while ((line = br.readLine()) != null) {
                            // use semi-colon as separator
                            String[] copy = line.split(";");
                            Publication p=new Magazine(dummy, 000);                             
                            List<Publication> pubs;                            
                            pubs=new ArrayList<Publication>(books);
                            pubs.addAll(magazines);
                            for(Publication x:pubs)
                                if(x.getTitle().trim().equals(copy[1].trim())) {  
                                    p=x;                                    
                                    break;
                                }
                            Copy b=new Copy(Integer.parseInt(copy[0]),p,copy[2]);                                                   
                            if(findMe.getCopyNo()==b.getCopyNo() && findMe.getPublication().getTitle().trim().equals(b.getPublication().getTitle().trim()))
                                out.println(findMe.getCopyNo()+";"+findMe.getPublication().getTitle()+";"+findMe.getStatus());
                            else
                                out.println(b.getCopyNo()+";"+b.getPublication().getTitle()+";"+b.getStatus());
                        }
                    } catch (FileNotFoundException e) {
                        e.printStackTrace();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    
                    new File("src/data/copies.txt").delete();
                    new File("src/data/tcopies.txt").renameTo(new File("src/data/copies.txt"));                  
        }
}
